#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="NewDataBase")]
public partial class NewDataBaseDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertCourse(Course instance);
  partial void UpdateCourse(Course instance);
  partial void DeleteCourse(Course instance);
  partial void InsertStudentResult(StudentResult instance);
  partial void UpdateStudentResult(StudentResult instance);
  partial void DeleteStudentResult(StudentResult instance);
  partial void InsertCourseRegistration(CourseRegistration instance);
  partial void UpdateCourseRegistration(CourseRegistration instance);
  partial void DeleteCourseRegistration(CourseRegistration instance);
  partial void InsertDepartment(Department instance);
  partial void UpdateDepartment(Department instance);
  partial void DeleteDepartment(Department instance);
  partial void InsertFaculty(Faculty instance);
  partial void UpdateFaculty(Faculty instance);
  partial void DeleteFaculty(Faculty instance);
  partial void InsertLevel(Level instance);
  partial void UpdateLevel(Level instance);
  partial void DeleteLevel(Level instance);
  partial void InsertRole(Role instance);
  partial void UpdateRole(Role instance);
  partial void DeleteRole(Role instance);
  partial void InsertStaff(Staff instance);
  partial void UpdateStaff(Staff instance);
  partial void DeleteStaff(Staff instance);
  partial void InsertStudent(Student instance);
  partial void UpdateStudent(Student instance);
  partial void DeleteStudent(Student instance);
  #endregion
	
	public NewDataBaseDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["NewDataBaseConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public NewDataBaseDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public NewDataBaseDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public NewDataBaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public NewDataBaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Course> Courses
	{
		get
		{
			return this.GetTable<Course>();
		}
	}
	
	public System.Data.Linq.Table<StudentResult> StudentResults
	{
		get
		{
			return this.GetTable<StudentResult>();
		}
	}
	
	public System.Data.Linq.Table<CourseRegistration> CourseRegistrations
	{
		get
		{
			return this.GetTable<CourseRegistration>();
		}
	}
	
	public System.Data.Linq.Table<Department> Departments
	{
		get
		{
			return this.GetTable<Department>();
		}
	}
	
	public System.Data.Linq.Table<Faculty> Faculties
	{
		get
		{
			return this.GetTable<Faculty>();
		}
	}
	
	public System.Data.Linq.Table<Level> Levels
	{
		get
		{
			return this.GetTable<Level>();
		}
	}
	
	public System.Data.Linq.Table<Role> Roles
	{
		get
		{
			return this.GetTable<Role>();
		}
	}
	
	public System.Data.Linq.Table<Staff> Staffs
	{
		get
		{
			return this.GetTable<Staff>();
		}
	}
	
	public System.Data.Linq.Table<Student> Students
	{
		get
		{
			return this.GetTable<Student>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Course")]
public partial class Course : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _CourseCode;
	
	private int _CourseID;
	
	private string _CourseName;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<int> _CreatedBy;
	
	private System.Nullable<System.DateTime> _DateModified;
	
	private System.Nullable<int> _ModifiedBy;
	
	private System.Nullable<int> _Duration;
	
	private EntitySet<CourseRegistration> _CourseRegistrations;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourseCodeChanging(string value);
    partial void OnCourseCodeChanged();
    partial void OnCourseIDChanging(int value);
    partial void OnCourseIDChanged();
    partial void OnCourseNameChanging(string value);
    partial void OnCourseNameChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnDurationChanging(System.Nullable<int> value);
    partial void OnDurationChanged();
    #endregion
	
	public Course()
	{
		this._CourseRegistrations = new EntitySet<CourseRegistration>(new Action<CourseRegistration>(this.attach_CourseRegistrations), new Action<CourseRegistration>(this.detach_CourseRegistrations));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string CourseCode
	{
		get
		{
			return this._CourseCode;
		}
		set
		{
			if ((this._CourseCode != value))
			{
				this.OnCourseCodeChanging(value);
				this.SendPropertyChanging();
				this._CourseCode = value;
				this.SendPropertyChanged("CourseCode");
				this.OnCourseCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
	public int CourseID
	{
		get
		{
			return this._CourseID;
		}
		set
		{
			if ((this._CourseID != value))
			{
				this.OnCourseIDChanging(value);
				this.SendPropertyChanging();
				this._CourseID = value;
				this.SendPropertyChanged("CourseID");
				this.OnCourseIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseName", DbType="NVarChar(100)")]
	public string CourseName
	{
		get
		{
			return this._CourseName;
		}
		set
		{
			if ((this._CourseName != value))
			{
				this.OnCourseNameChanging(value);
				this.SendPropertyChanging();
				this._CourseName = value;
				this.SendPropertyChanged("CourseName");
				this.OnCourseNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="Date")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
	public System.Nullable<int> CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="Date")]
	public System.Nullable<System.DateTime> DateModified
	{
		get
		{
			return this._DateModified;
		}
		set
		{
			if ((this._DateModified != value))
			{
				this.OnDateModifiedChanging(value);
				this.SendPropertyChanging();
				this._DateModified = value;
				this.SendPropertyChanged("DateModified");
				this.OnDateModifiedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
	public System.Nullable<int> ModifiedBy
	{
		get
		{
			return this._ModifiedBy;
		}
		set
		{
			if ((this._ModifiedBy != value))
			{
				this.OnModifiedByChanging(value);
				this.SendPropertyChanging();
				this._ModifiedBy = value;
				this.SendPropertyChanged("ModifiedBy");
				this.OnModifiedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Int")]
	public System.Nullable<int> Duration
	{
		get
		{
			return this._Duration;
		}
		set
		{
			if ((this._Duration != value))
			{
				this.OnDurationChanging(value);
				this.SendPropertyChanging();
				this._Duration = value;
				this.SendPropertyChanged("Duration");
				this.OnDurationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_CourseRegistration", Storage="_CourseRegistrations", ThisKey="CourseCode", OtherKey="CourseCode")]
	public EntitySet<CourseRegistration> CourseRegistrations
	{
		get
		{
			return this._CourseRegistrations;
		}
		set
		{
			this._CourseRegistrations.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_CourseRegistrations(CourseRegistration entity)
	{
		this.SendPropertyChanging();
		entity.Course = this;
	}
	
	private void detach_CourseRegistrations(CourseRegistration entity)
	{
		this.SendPropertyChanging();
		entity.Course = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentResult")]
public partial class StudentResult : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _StudentResultID;
	
	private string _StudentNumber;
	
	private string _Grade;
	
	private string _Remark;
	
	private System.Nullable<int> _levelId;
	
	private System.Nullable<System.DateTime> _DateCreated;
	
	private System.Nullable<int> _CreatedBy;
	
	private EntityRef<Student> _Student;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentResultIDChanging(int value);
    partial void OnStudentResultIDChanged();
    partial void OnStudentNumberChanging(string value);
    partial void OnStudentNumberChanged();
    partial void OnGradeChanging(string value);
    partial void OnGradeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnlevelIdChanging(System.Nullable<int> value);
    partial void OnlevelIdChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    #endregion
	
	public StudentResult()
	{
		this._Student = default(EntityRef<Student>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentResultID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int StudentResultID
	{
		get
		{
			return this._StudentResultID;
		}
		set
		{
			if ((this._StudentResultID != value))
			{
				this.OnStudentResultIDChanging(value);
				this.SendPropertyChanging();
				this._StudentResultID = value;
				this.SendPropertyChanged("StudentResultID");
				this.OnStudentResultIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentNumber", DbType="NVarChar(15)")]
	public string StudentNumber
	{
		get
		{
			return this._StudentNumber;
		}
		set
		{
			if ((this._StudentNumber != value))
			{
				if (this._Student.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnStudentNumberChanging(value);
				this.SendPropertyChanging();
				this._StudentNumber = value;
				this.SendPropertyChanged("StudentNumber");
				this.OnStudentNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="NVarChar(5)")]
	public string Grade
	{
		get
		{
			return this._Grade;
		}
		set
		{
			if ((this._Grade != value))
			{
				this.OnGradeChanging(value);
				this.SendPropertyChanging();
				this._Grade = value;
				this.SendPropertyChanged("Grade");
				this.OnGradeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(100)")]
	public string Remark
	{
		get
		{
			return this._Remark;
		}
		set
		{
			if ((this._Remark != value))
			{
				this.OnRemarkChanging(value);
				this.SendPropertyChanging();
				this._Remark = value;
				this.SendPropertyChanged("Remark");
				this.OnRemarkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_levelId", DbType="Int")]
	public System.Nullable<int> levelId
	{
		get
		{
			return this._levelId;
		}
		set
		{
			if ((this._levelId != value))
			{
				this.OnlevelIdChanging(value);
				this.SendPropertyChanging();
				this._levelId = value;
				this.SendPropertyChanged("levelId");
				this.OnlevelIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="Date")]
	public System.Nullable<System.DateTime> DateCreated
	{
		get
		{
			return this._DateCreated;
		}
		set
		{
			if ((this._DateCreated != value))
			{
				this.OnDateCreatedChanging(value);
				this.SendPropertyChanging();
				this._DateCreated = value;
				this.SendPropertyChanged("DateCreated");
				this.OnDateCreatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
	public System.Nullable<int> CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentResult", Storage="_Student", ThisKey="StudentNumber", OtherKey="StudentNumber", IsForeignKey=true, DeleteRule="CASCADE")]
	public Student Student
	{
		get
		{
			return this._Student.Entity;
		}
		set
		{
			Student previousValue = this._Student.Entity;
			if (((previousValue != value) 
						|| (this._Student.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Student.Entity = null;
					previousValue.StudentResults.Remove(this);
				}
				this._Student.Entity = value;
				if ((value != null))
				{
					value.StudentResults.Add(this);
					this._StudentNumber = value.StudentNumber;
				}
				else
				{
					this._StudentNumber = default(string);
				}
				this.SendPropertyChanged("Student");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CourseRegistration")]
public partial class CourseRegistration : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CourseRegistrationID;
	
	private string _CourseCode;
	
	private string _StudentNumber;
	
	private System.Nullable<int> _LevelID;
	
	private System.Nullable<System.DateTime> _DateCreated;
	
	private System.Nullable<int> _CreatedBy;
	
	private EntityRef<Course> _Course;
	
	private EntityRef<Level> _Level;
	
	private EntityRef<Student> _Student;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourseRegistrationIDChanging(int value);
    partial void OnCourseRegistrationIDChanged();
    partial void OnCourseCodeChanging(string value);
    partial void OnCourseCodeChanged();
    partial void OnStudentNumberChanging(string value);
    partial void OnStudentNumberChanged();
    partial void OnLevelIDChanging(System.Nullable<int> value);
    partial void OnLevelIDChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    #endregion
	
	public CourseRegistration()
	{
		this._Course = default(EntityRef<Course>);
		this._Level = default(EntityRef<Level>);
		this._Student = default(EntityRef<Student>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseRegistrationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int CourseRegistrationID
	{
		get
		{
			return this._CourseRegistrationID;
		}
		set
		{
			if ((this._CourseRegistrationID != value))
			{
				this.OnCourseRegistrationIDChanging(value);
				this.SendPropertyChanging();
				this._CourseRegistrationID = value;
				this.SendPropertyChanged("CourseRegistrationID");
				this.OnCourseRegistrationIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string CourseCode
	{
		get
		{
			return this._CourseCode;
		}
		set
		{
			if ((this._CourseCode != value))
			{
				if (this._Course.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCourseCodeChanging(value);
				this.SendPropertyChanging();
				this._CourseCode = value;
				this.SendPropertyChanged("CourseCode");
				this.OnCourseCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentNumber", DbType="NVarChar(15)")]
	public string StudentNumber
	{
		get
		{
			return this._StudentNumber;
		}
		set
		{
			if ((this._StudentNumber != value))
			{
				if (this._Student.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnStudentNumberChanging(value);
				this.SendPropertyChanging();
				this._StudentNumber = value;
				this.SendPropertyChanged("StudentNumber");
				this.OnStudentNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelID", DbType="Int")]
	public System.Nullable<int> LevelID
	{
		get
		{
			return this._LevelID;
		}
		set
		{
			if ((this._LevelID != value))
			{
				if (this._Level.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnLevelIDChanging(value);
				this.SendPropertyChanging();
				this._LevelID = value;
				this.SendPropertyChanged("LevelID");
				this.OnLevelIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="Date")]
	public System.Nullable<System.DateTime> DateCreated
	{
		get
		{
			return this._DateCreated;
		}
		set
		{
			if ((this._DateCreated != value))
			{
				this.OnDateCreatedChanging(value);
				this.SendPropertyChanging();
				this._DateCreated = value;
				this.SendPropertyChanged("DateCreated");
				this.OnDateCreatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
	public System.Nullable<int> CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_CourseRegistration", Storage="_Course", ThisKey="CourseCode", OtherKey="CourseCode", IsForeignKey=true)]
	public Course Course
	{
		get
		{
			return this._Course.Entity;
		}
		set
		{
			Course previousValue = this._Course.Entity;
			if (((previousValue != value) 
						|| (this._Course.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Course.Entity = null;
					previousValue.CourseRegistrations.Remove(this);
				}
				this._Course.Entity = value;
				if ((value != null))
				{
					value.CourseRegistrations.Add(this);
					this._CourseCode = value.CourseCode;
				}
				else
				{
					this._CourseCode = default(string);
				}
				this.SendPropertyChanged("Course");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Level_CourseRegistration", Storage="_Level", ThisKey="LevelID", OtherKey="LevelID", IsForeignKey=true)]
	public Level Level
	{
		get
		{
			return this._Level.Entity;
		}
		set
		{
			Level previousValue = this._Level.Entity;
			if (((previousValue != value) 
						|| (this._Level.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Level.Entity = null;
					previousValue.CourseRegistrations.Remove(this);
				}
				this._Level.Entity = value;
				if ((value != null))
				{
					value.CourseRegistrations.Add(this);
					this._LevelID = value.LevelID;
				}
				else
				{
					this._LevelID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Level");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_CourseRegistration", Storage="_Student", ThisKey="StudentNumber", OtherKey="StudentNumber", IsForeignKey=true, DeleteRule="CASCADE")]
	public Student Student
	{
		get
		{
			return this._Student.Entity;
		}
		set
		{
			Student previousValue = this._Student.Entity;
			if (((previousValue != value) 
						|| (this._Student.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Student.Entity = null;
					previousValue.CourseRegistrations.Remove(this);
				}
				this._Student.Entity = value;
				if ((value != null))
				{
					value.CourseRegistrations.Add(this);
					this._StudentNumber = value.StudentNumber;
				}
				else
				{
					this._StudentNumber = default(string);
				}
				this.SendPropertyChanged("Student");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Department")]
public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _DepartmentID;
	
	private System.Nullable<int> _HeadofDeptID;
	
	private System.Nullable<int> _FacultyID;
	
	private string _DepartmentName;
	
	private System.Nullable<System.DateTime> _DateCreated;
	
	private System.Nullable<int> _CreatedBy;
	
	private EntitySet<Student> _Students;
	
	private EntityRef<Faculty> _Faculty;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartmentIDChanging(int value);
    partial void OnDepartmentIDChanged();
    partial void OnHeadofDeptIDChanging(System.Nullable<int> value);
    partial void OnHeadofDeptIDChanged();
    partial void OnFacultyIDChanging(System.Nullable<int> value);
    partial void OnFacultyIDChanged();
    partial void OnDepartmentNameChanging(string value);
    partial void OnDepartmentNameChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    #endregion
	
	public Department()
	{
		this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
		this._Faculty = default(EntityRef<Faculty>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int DepartmentID
	{
		get
		{
			return this._DepartmentID;
		}
		set
		{
			if ((this._DepartmentID != value))
			{
				this.OnDepartmentIDChanging(value);
				this.SendPropertyChanging();
				this._DepartmentID = value;
				this.SendPropertyChanged("DepartmentID");
				this.OnDepartmentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadofDeptID", DbType="Int")]
	public System.Nullable<int> HeadofDeptID
	{
		get
		{
			return this._HeadofDeptID;
		}
		set
		{
			if ((this._HeadofDeptID != value))
			{
				this.OnHeadofDeptIDChanging(value);
				this.SendPropertyChanging();
				this._HeadofDeptID = value;
				this.SendPropertyChanged("HeadofDeptID");
				this.OnHeadofDeptIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacultyID", DbType="Int")]
	public System.Nullable<int> FacultyID
	{
		get
		{
			return this._FacultyID;
		}
		set
		{
			if ((this._FacultyID != value))
			{
				if (this._Faculty.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnFacultyIDChanging(value);
				this.SendPropertyChanging();
				this._FacultyID = value;
				this.SendPropertyChanged("FacultyID");
				this.OnFacultyIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(200)")]
	public string DepartmentName
	{
		get
		{
			return this._DepartmentName;
		}
		set
		{
			if ((this._DepartmentName != value))
			{
				this.OnDepartmentNameChanging(value);
				this.SendPropertyChanging();
				this._DepartmentName = value;
				this.SendPropertyChanged("DepartmentName");
				this.OnDepartmentNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="Date")]
	public System.Nullable<System.DateTime> DateCreated
	{
		get
		{
			return this._DateCreated;
		}
		set
		{
			if ((this._DateCreated != value))
			{
				this.OnDateCreatedChanging(value);
				this.SendPropertyChanging();
				this._DateCreated = value;
				this.SendPropertyChanged("DateCreated");
				this.OnDateCreatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
	public System.Nullable<int> CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Student", Storage="_Students", ThisKey="DepartmentID", OtherKey="DepartmentID")]
	public EntitySet<Student> Students
	{
		get
		{
			return this._Students;
		}
		set
		{
			this._Students.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faculty_Department", Storage="_Faculty", ThisKey="FacultyID", OtherKey="FacultyID", IsForeignKey=true)]
	public Faculty Faculty
	{
		get
		{
			return this._Faculty.Entity;
		}
		set
		{
			Faculty previousValue = this._Faculty.Entity;
			if (((previousValue != value) 
						|| (this._Faculty.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Faculty.Entity = null;
					previousValue.Departments.Remove(this);
				}
				this._Faculty.Entity = value;
				if ((value != null))
				{
					value.Departments.Add(this);
					this._FacultyID = value.FacultyID;
				}
				else
				{
					this._FacultyID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Faculty");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Students(Student entity)
	{
		this.SendPropertyChanging();
		entity.Department = this;
	}
	
	private void detach_Students(Student entity)
	{
		this.SendPropertyChanging();
		entity.Department = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Faculty")]
public partial class Faculty : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _FacultyID;
	
	private string _FacultyName;
	
	private string _FacultyDean;
	
	private System.Nullable<System.DateTime> _DateCreated;
	
	private System.Nullable<int> _CreatedBy;
	
	private EntitySet<Department> _Departments;
	
	private EntitySet<Student> _Students;
	
	private EntityRef<Staff> _Staff;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFacultyIDChanging(int value);
    partial void OnFacultyIDChanged();
    partial void OnFacultyNameChanging(string value);
    partial void OnFacultyNameChanged();
    partial void OnFacultyDeanChanging(string value);
    partial void OnFacultyDeanChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    #endregion
	
	public Faculty()
	{
		this._Departments = new EntitySet<Department>(new Action<Department>(this.attach_Departments), new Action<Department>(this.detach_Departments));
		this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
		this._Staff = default(EntityRef<Staff>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacultyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int FacultyID
	{
		get
		{
			return this._FacultyID;
		}
		set
		{
			if ((this._FacultyID != value))
			{
				this.OnFacultyIDChanging(value);
				this.SendPropertyChanging();
				this._FacultyID = value;
				this.SendPropertyChanged("FacultyID");
				this.OnFacultyIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacultyName", DbType="NVarChar(200)")]
	public string FacultyName
	{
		get
		{
			return this._FacultyName;
		}
		set
		{
			if ((this._FacultyName != value))
			{
				this.OnFacultyNameChanging(value);
				this.SendPropertyChanging();
				this._FacultyName = value;
				this.SendPropertyChanged("FacultyName");
				this.OnFacultyNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacultyDean", DbType="NVarChar(15)")]
	public string FacultyDean
	{
		get
		{
			return this._FacultyDean;
		}
		set
		{
			if ((this._FacultyDean != value))
			{
				if (this._Staff.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnFacultyDeanChanging(value);
				this.SendPropertyChanging();
				this._FacultyDean = value;
				this.SendPropertyChanged("FacultyDean");
				this.OnFacultyDeanChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="Date")]
	public System.Nullable<System.DateTime> DateCreated
	{
		get
		{
			return this._DateCreated;
		}
		set
		{
			if ((this._DateCreated != value))
			{
				this.OnDateCreatedChanging(value);
				this.SendPropertyChanging();
				this._DateCreated = value;
				this.SendPropertyChanged("DateCreated");
				this.OnDateCreatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
	public System.Nullable<int> CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faculty_Department", Storage="_Departments", ThisKey="FacultyID", OtherKey="FacultyID")]
	public EntitySet<Department> Departments
	{
		get
		{
			return this._Departments;
		}
		set
		{
			this._Departments.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faculty_Student", Storage="_Students", ThisKey="FacultyID", OtherKey="FacultyID")]
	public EntitySet<Student> Students
	{
		get
		{
			return this._Students;
		}
		set
		{
			this._Students.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Faculty", Storage="_Staff", ThisKey="FacultyDean", OtherKey="StaffNumber", IsForeignKey=true)]
	public Staff Staff
	{
		get
		{
			return this._Staff.Entity;
		}
		set
		{
			Staff previousValue = this._Staff.Entity;
			if (((previousValue != value) 
						|| (this._Staff.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Staff.Entity = null;
					previousValue.Faculties.Remove(this);
				}
				this._Staff.Entity = value;
				if ((value != null))
				{
					value.Faculties.Add(this);
					this._FacultyDean = value.StaffNumber;
				}
				else
				{
					this._FacultyDean = default(string);
				}
				this.SendPropertyChanged("Staff");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Departments(Department entity)
	{
		this.SendPropertyChanging();
		entity.Faculty = this;
	}
	
	private void detach_Departments(Department entity)
	{
		this.SendPropertyChanging();
		entity.Faculty = null;
	}
	
	private void attach_Students(Student entity)
	{
		this.SendPropertyChanging();
		entity.Faculty = this;
	}
	
	private void detach_Students(Student entity)
	{
		this.SendPropertyChanging();
		entity.Faculty = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Level]")]
public partial class Level : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _LevelID;
	
	private string _LevelName;
	
	private System.Nullable<System.DateTime> _DateCreated;
	
	private System.Nullable<int> _CreatedBy;
	
	private EntitySet<CourseRegistration> _CourseRegistrations;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLevelIDChanging(int value);
    partial void OnLevelIDChanged();
    partial void OnLevelNameChanging(string value);
    partial void OnLevelNameChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    #endregion
	
	public Level()
	{
		this._CourseRegistrations = new EntitySet<CourseRegistration>(new Action<CourseRegistration>(this.attach_CourseRegistrations), new Action<CourseRegistration>(this.detach_CourseRegistrations));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int LevelID
	{
		get
		{
			return this._LevelID;
		}
		set
		{
			if ((this._LevelID != value))
			{
				this.OnLevelIDChanging(value);
				this.SendPropertyChanging();
				this._LevelID = value;
				this.SendPropertyChanged("LevelID");
				this.OnLevelIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelName", DbType="NVarChar(50)")]
	public string LevelName
	{
		get
		{
			return this._LevelName;
		}
		set
		{
			if ((this._LevelName != value))
			{
				this.OnLevelNameChanging(value);
				this.SendPropertyChanging();
				this._LevelName = value;
				this.SendPropertyChanged("LevelName");
				this.OnLevelNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="Date")]
	public System.Nullable<System.DateTime> DateCreated
	{
		get
		{
			return this._DateCreated;
		}
		set
		{
			if ((this._DateCreated != value))
			{
				this.OnDateCreatedChanging(value);
				this.SendPropertyChanging();
				this._DateCreated = value;
				this.SendPropertyChanged("DateCreated");
				this.OnDateCreatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
	public System.Nullable<int> CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Level_CourseRegistration", Storage="_CourseRegistrations", ThisKey="LevelID", OtherKey="LevelID")]
	public EntitySet<CourseRegistration> CourseRegistrations
	{
		get
		{
			return this._CourseRegistrations;
		}
		set
		{
			this._CourseRegistrations.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_CourseRegistrations(CourseRegistration entity)
	{
		this.SendPropertyChanging();
		entity.Level = this;
	}
	
	private void detach_CourseRegistrations(CourseRegistration entity)
	{
		this.SendPropertyChanging();
		entity.Level = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _RoleID;
	
	private string _RoleDescription;
	
	private System.Nullable<System.DateTime> _DateCreated;
	
	private System.Nullable<int> _CreatedBy;
	
	private EntitySet<Staff> _Staffs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnRoleDescriptionChanging(string value);
    partial void OnRoleDescriptionChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    #endregion
	
	public Role()
	{
		this._Staffs = new EntitySet<Staff>(new Action<Staff>(this.attach_Staffs), new Action<Staff>(this.detach_Staffs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int RoleID
	{
		get
		{
			return this._RoleID;
		}
		set
		{
			if ((this._RoleID != value))
			{
				this.OnRoleIDChanging(value);
				this.SendPropertyChanging();
				this._RoleID = value;
				this.SendPropertyChanged("RoleID");
				this.OnRoleIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleDescription", DbType="NVarChar(100)")]
	public string RoleDescription
	{
		get
		{
			return this._RoleDescription;
		}
		set
		{
			if ((this._RoleDescription != value))
			{
				this.OnRoleDescriptionChanging(value);
				this.SendPropertyChanging();
				this._RoleDescription = value;
				this.SendPropertyChanged("RoleDescription");
				this.OnRoleDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="Date")]
	public System.Nullable<System.DateTime> DateCreated
	{
		get
		{
			return this._DateCreated;
		}
		set
		{
			if ((this._DateCreated != value))
			{
				this.OnDateCreatedChanging(value);
				this.SendPropertyChanging();
				this._DateCreated = value;
				this.SendPropertyChanged("DateCreated");
				this.OnDateCreatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
	public System.Nullable<int> CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Staff", Storage="_Staffs", ThisKey="RoleID", OtherKey="RoleID")]
	public EntitySet<Staff> Staffs
	{
		get
		{
			return this._Staffs;
		}
		set
		{
			this._Staffs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Staffs(Staff entity)
	{
		this.SendPropertyChanging();
		entity.Role = this;
	}
	
	private void detach_Staffs(Staff entity)
	{
		this.SendPropertyChanging();
		entity.Role = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Staff")]
public partial class Staff : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _StaffNumber;
	
	private int _StaffID;
	
	private System.Nullable<int> _RoleID;
	
	private string _FirstName;
	
	private string _LastName;
	
	private string _OtherName;
	
	private string _Gender;
	
	private string _Address;
	
	private string _Status;
	
	private System.Nullable<System.DateTime> _DateCreated;
	
	private System.Nullable<int> _CreatedBy;
	
	private string _Password;
	
	private string _PassportPhoto;
	
	private EntitySet<Faculty> _Faculties;
	
	private EntityRef<Role> _Role;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStaffNumberChanging(string value);
    partial void OnStaffNumberChanged();
    partial void OnStaffIDChanging(int value);
    partial void OnStaffIDChanged();
    partial void OnRoleIDChanging(System.Nullable<int> value);
    partial void OnRoleIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnOtherNameChanging(string value);
    partial void OnOtherNameChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPassportPhotoChanging(string value);
    partial void OnPassportPhotoChanged();
    #endregion
	
	public Staff()
	{
		this._Faculties = new EntitySet<Faculty>(new Action<Faculty>(this.attach_Faculties), new Action<Faculty>(this.detach_Faculties));
		this._Role = default(EntityRef<Role>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffNumber", DbType="NVarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string StaffNumber
	{
		get
		{
			return this._StaffNumber;
		}
		set
		{
			if ((this._StaffNumber != value))
			{
				this.OnStaffNumberChanging(value);
				this.SendPropertyChanging();
				this._StaffNumber = value;
				this.SendPropertyChanged("StaffNumber");
				this.OnStaffNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
	public int StaffID
	{
		get
		{
			return this._StaffID;
		}
		set
		{
			if ((this._StaffID != value))
			{
				this.OnStaffIDChanging(value);
				this.SendPropertyChanging();
				this._StaffID = value;
				this.SendPropertyChanged("StaffID");
				this.OnStaffIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int")]
	public System.Nullable<int> RoleID
	{
		get
		{
			return this._RoleID;
		}
		set
		{
			if ((this._RoleID != value))
			{
				if (this._Role.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnRoleIDChanging(value);
				this.SendPropertyChanging();
				this._RoleID = value;
				this.SendPropertyChanged("RoleID");
				this.OnRoleIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
	public string FirstName
	{
		get
		{
			return this._FirstName;
		}
		set
		{
			if ((this._FirstName != value))
			{
				this.OnFirstNameChanging(value);
				this.SendPropertyChanging();
				this._FirstName = value;
				this.SendPropertyChanged("FirstName");
				this.OnFirstNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
	public string LastName
	{
		get
		{
			return this._LastName;
		}
		set
		{
			if ((this._LastName != value))
			{
				this.OnLastNameChanging(value);
				this.SendPropertyChanging();
				this._LastName = value;
				this.SendPropertyChanged("LastName");
				this.OnLastNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherName", DbType="NVarChar(50)")]
	public string OtherName
	{
		get
		{
			return this._OtherName;
		}
		set
		{
			if ((this._OtherName != value))
			{
				this.OnOtherNameChanging(value);
				this.SendPropertyChanging();
				this._OtherName = value;
				this.SendPropertyChanged("OtherName");
				this.OnOtherNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(10)")]
	public string Gender
	{
		get
		{
			return this._Gender;
		}
		set
		{
			if ((this._Gender != value))
			{
				this.OnGenderChanging(value);
				this.SendPropertyChanging();
				this._Gender = value;
				this.SendPropertyChanged("Gender");
				this.OnGenderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(200)")]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(20)")]
	public string Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="Date")]
	public System.Nullable<System.DateTime> DateCreated
	{
		get
		{
			return this._DateCreated;
		}
		set
		{
			if ((this._DateCreated != value))
			{
				this.OnDateCreatedChanging(value);
				this.SendPropertyChanging();
				this._DateCreated = value;
				this.SendPropertyChanged("DateCreated");
				this.OnDateCreatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
	public System.Nullable<int> CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(500)")]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportPhoto", DbType="NVarChar(100)")]
	public string PassportPhoto
	{
		get
		{
			return this._PassportPhoto;
		}
		set
		{
			if ((this._PassportPhoto != value))
			{
				this.OnPassportPhotoChanging(value);
				this.SendPropertyChanging();
				this._PassportPhoto = value;
				this.SendPropertyChanged("PassportPhoto");
				this.OnPassportPhotoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Faculty", Storage="_Faculties", ThisKey="StaffNumber", OtherKey="FacultyDean")]
	public EntitySet<Faculty> Faculties
	{
		get
		{
			return this._Faculties;
		}
		set
		{
			this._Faculties.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Staff", Storage="_Role", ThisKey="RoleID", OtherKey="RoleID", IsForeignKey=true)]
	public Role Role
	{
		get
		{
			return this._Role.Entity;
		}
		set
		{
			Role previousValue = this._Role.Entity;
			if (((previousValue != value) 
						|| (this._Role.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Role.Entity = null;
					previousValue.Staffs.Remove(this);
				}
				this._Role.Entity = value;
				if ((value != null))
				{
					value.Staffs.Add(this);
					this._RoleID = value.RoleID;
				}
				else
				{
					this._RoleID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Role");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Faculties(Faculty entity)
	{
		this.SendPropertyChanging();
		entity.Staff = this;
	}
	
	private void detach_Faculties(Faculty entity)
	{
		this.SendPropertyChanging();
		entity.Staff = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student")]
public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _StudentNumber;
	
	private int _StudentID;
	
	private string _FirstName;
	
	private string _LastName;
	
	private string _OtherName;
	
	private string _Gender;
	
	private string _Address;
	
	private string _status;
	
	private System.Nullable<System.DateTime> _DateCreated;
	
	private System.Nullable<int> _CreatedBy;
	
	private string _Password;
	
	private string _PassportPhoto;
	
	private string _StudentPhoneNumber;
	
	private string _ParentPhoneNumber;
	
	private string _ParentName;
	
	private System.Nullable<int> _DepartmentID;
	
	private System.Nullable<int> _FacultyID;
	
	private EntitySet<StudentResult> _StudentResults;
	
	private EntitySet<CourseRegistration> _CourseRegistrations;
	
	private EntityRef<Department> _Department;
	
	private EntityRef<Faculty> _Faculty;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentNumberChanging(string value);
    partial void OnStudentNumberChanged();
    partial void OnStudentIDChanging(int value);
    partial void OnStudentIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnOtherNameChanging(string value);
    partial void OnOtherNameChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPassportPhotoChanging(string value);
    partial void OnPassportPhotoChanged();
    partial void OnStudentPhoneNumberChanging(string value);
    partial void OnStudentPhoneNumberChanged();
    partial void OnParentPhoneNumberChanging(string value);
    partial void OnParentPhoneNumberChanged();
    partial void OnParentNameChanging(string value);
    partial void OnParentNameChanged();
    partial void OnDepartmentIDChanging(System.Nullable<int> value);
    partial void OnDepartmentIDChanged();
    partial void OnFacultyIDChanging(System.Nullable<int> value);
    partial void OnFacultyIDChanged();
    #endregion
	
	public Student()
	{
		this._StudentResults = new EntitySet<StudentResult>(new Action<StudentResult>(this.attach_StudentResults), new Action<StudentResult>(this.detach_StudentResults));
		this._CourseRegistrations = new EntitySet<CourseRegistration>(new Action<CourseRegistration>(this.attach_CourseRegistrations), new Action<CourseRegistration>(this.detach_CourseRegistrations));
		this._Department = default(EntityRef<Department>);
		this._Faculty = default(EntityRef<Faculty>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentNumber", DbType="NVarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string StudentNumber
	{
		get
		{
			return this._StudentNumber;
		}
		set
		{
			if ((this._StudentNumber != value))
			{
				this.OnStudentNumberChanging(value);
				this.SendPropertyChanging();
				this._StudentNumber = value;
				this.SendPropertyChanged("StudentNumber");
				this.OnStudentNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
	public int StudentID
	{
		get
		{
			return this._StudentID;
		}
		set
		{
			if ((this._StudentID != value))
			{
				this.OnStudentIDChanging(value);
				this.SendPropertyChanging();
				this._StudentID = value;
				this.SendPropertyChanged("StudentID");
				this.OnStudentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
	public string FirstName
	{
		get
		{
			return this._FirstName;
		}
		set
		{
			if ((this._FirstName != value))
			{
				this.OnFirstNameChanging(value);
				this.SendPropertyChanging();
				this._FirstName = value;
				this.SendPropertyChanged("FirstName");
				this.OnFirstNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
	public string LastName
	{
		get
		{
			return this._LastName;
		}
		set
		{
			if ((this._LastName != value))
			{
				this.OnLastNameChanging(value);
				this.SendPropertyChanging();
				this._LastName = value;
				this.SendPropertyChanged("LastName");
				this.OnLastNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherName", DbType="NVarChar(50)")]
	public string OtherName
	{
		get
		{
			return this._OtherName;
		}
		set
		{
			if ((this._OtherName != value))
			{
				this.OnOtherNameChanging(value);
				this.SendPropertyChanging();
				this._OtherName = value;
				this.SendPropertyChanged("OtherName");
				this.OnOtherNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(10)")]
	public string Gender
	{
		get
		{
			return this._Gender;
		}
		set
		{
			if ((this._Gender != value))
			{
				this.OnGenderChanging(value);
				this.SendPropertyChanging();
				this._Gender = value;
				this.SendPropertyChanged("Gender");
				this.OnGenderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(200)")]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(20)")]
	public string status
	{
		get
		{
			return this._status;
		}
		set
		{
			if ((this._status != value))
			{
				this.OnstatusChanging(value);
				this.SendPropertyChanging();
				this._status = value;
				this.SendPropertyChanged("status");
				this.OnstatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="Date")]
	public System.Nullable<System.DateTime> DateCreated
	{
		get
		{
			return this._DateCreated;
		}
		set
		{
			if ((this._DateCreated != value))
			{
				this.OnDateCreatedChanging(value);
				this.SendPropertyChanging();
				this._DateCreated = value;
				this.SendPropertyChanged("DateCreated");
				this.OnDateCreatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
	public System.Nullable<int> CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(500)")]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportPhoto", DbType="NVarChar(100)")]
	public string PassportPhoto
	{
		get
		{
			return this._PassportPhoto;
		}
		set
		{
			if ((this._PassportPhoto != value))
			{
				this.OnPassportPhotoChanging(value);
				this.SendPropertyChanging();
				this._PassportPhoto = value;
				this.SendPropertyChanged("PassportPhoto");
				this.OnPassportPhotoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentPhoneNumber", DbType="NVarChar(50)")]
	public string StudentPhoneNumber
	{
		get
		{
			return this._StudentPhoneNumber;
		}
		set
		{
			if ((this._StudentPhoneNumber != value))
			{
				this.OnStudentPhoneNumberChanging(value);
				this.SendPropertyChanging();
				this._StudentPhoneNumber = value;
				this.SendPropertyChanged("StudentPhoneNumber");
				this.OnStudentPhoneNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentPhoneNumber", DbType="NVarChar(50)")]
	public string ParentPhoneNumber
	{
		get
		{
			return this._ParentPhoneNumber;
		}
		set
		{
			if ((this._ParentPhoneNumber != value))
			{
				this.OnParentPhoneNumberChanging(value);
				this.SendPropertyChanging();
				this._ParentPhoneNumber = value;
				this.SendPropertyChanged("ParentPhoneNumber");
				this.OnParentPhoneNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentName", DbType="NVarChar(100)")]
	public string ParentName
	{
		get
		{
			return this._ParentName;
		}
		set
		{
			if ((this._ParentName != value))
			{
				this.OnParentNameChanging(value);
				this.SendPropertyChanging();
				this._ParentName = value;
				this.SendPropertyChanged("ParentName");
				this.OnParentNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="Int")]
	public System.Nullable<int> DepartmentID
	{
		get
		{
			return this._DepartmentID;
		}
		set
		{
			if ((this._DepartmentID != value))
			{
				if (this._Department.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnDepartmentIDChanging(value);
				this.SendPropertyChanging();
				this._DepartmentID = value;
				this.SendPropertyChanged("DepartmentID");
				this.OnDepartmentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacultyID", DbType="Int")]
	public System.Nullable<int> FacultyID
	{
		get
		{
			return this._FacultyID;
		}
		set
		{
			if ((this._FacultyID != value))
			{
				if (this._Faculty.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnFacultyIDChanging(value);
				this.SendPropertyChanging();
				this._FacultyID = value;
				this.SendPropertyChanged("FacultyID");
				this.OnFacultyIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentResult", Storage="_StudentResults", ThisKey="StudentNumber", OtherKey="StudentNumber")]
	public EntitySet<StudentResult> StudentResults
	{
		get
		{
			return this._StudentResults;
		}
		set
		{
			this._StudentResults.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_CourseRegistration", Storage="_CourseRegistrations", ThisKey="StudentNumber", OtherKey="StudentNumber")]
	public EntitySet<CourseRegistration> CourseRegistrations
	{
		get
		{
			return this._CourseRegistrations;
		}
		set
		{
			this._CourseRegistrations.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Student", Storage="_Department", ThisKey="DepartmentID", OtherKey="DepartmentID", IsForeignKey=true)]
	public Department Department
	{
		get
		{
			return this._Department.Entity;
		}
		set
		{
			Department previousValue = this._Department.Entity;
			if (((previousValue != value) 
						|| (this._Department.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Department.Entity = null;
					previousValue.Students.Remove(this);
				}
				this._Department.Entity = value;
				if ((value != null))
				{
					value.Students.Add(this);
					this._DepartmentID = value.DepartmentID;
				}
				else
				{
					this._DepartmentID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Department");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faculty_Student", Storage="_Faculty", ThisKey="FacultyID", OtherKey="FacultyID", IsForeignKey=true)]
	public Faculty Faculty
	{
		get
		{
			return this._Faculty.Entity;
		}
		set
		{
			Faculty previousValue = this._Faculty.Entity;
			if (((previousValue != value) 
						|| (this._Faculty.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Faculty.Entity = null;
					previousValue.Students.Remove(this);
				}
				this._Faculty.Entity = value;
				if ((value != null))
				{
					value.Students.Add(this);
					this._FacultyID = value.FacultyID;
				}
				else
				{
					this._FacultyID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Faculty");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_StudentResults(StudentResult entity)
	{
		this.SendPropertyChanging();
		entity.Student = this;
	}
	
	private void detach_StudentResults(StudentResult entity)
	{
		this.SendPropertyChanging();
		entity.Student = null;
	}
	
	private void attach_CourseRegistrations(CourseRegistration entity)
	{
		this.SendPropertyChanging();
		entity.Student = this;
	}
	
	private void detach_CourseRegistrations(CourseRegistration entity)
	{
		this.SendPropertyChanging();
		entity.Student = null;
	}
}
#pragma warning restore 1591
